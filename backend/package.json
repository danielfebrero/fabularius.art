{
  "name": "pornspot-ai-backend",
  "version": "1.0.0",
  "description": "Backend Lambda functions for pornspot.ai gallery",
  "main": "index.js",
  "scripts": {
    "build": "tsc && npm run copy:templates",
    "build:watch": "tsc --watch",
    "copy:templates": "node -e \"const fs=require('fs'); const path=require('path'); function copyRecursiveSync(src, dest) { const exists = fs.existsSync(src); const stats = exists && fs.statSync(src); const isDirectory = exists && stats.isDirectory(); if (isDirectory) { if (!fs.existsSync(dest)) fs.mkdirSync(dest, {recursive: true}); } else { const destDir = path.dirname(dest); if (!fs.existsSync(destDir)) fs.mkdirSync(destDir, {recursive: true}); } if (isDirectory) { fs.readdirSync(src).forEach(childItemName => { copyRecursiveSync(path.join(src, childItemName), path.join(dest, childItemName)); }); } else { fs.copyFileSync(src, dest); } } copyRecursiveSync('shared/email_templates', 'dist/shared/email_templates');\"",
    "build:lambda": "npm run build && npm run install:layer-lambda && npm run install-native-lambda && npm run copy:layer",
    "build:layer": "npm run build && npm run install-bcrypt-dev && npm run copy:layer",
    "build:sam": "npm run build:layer && cd .. && sam build",
    "copy:layer": "node -e \"const fs=require('fs'); const path=require('path'); function copyRecursiveSync(src, dest) { const exists = fs.existsSync(src); const stats = exists && fs.statSync(src); const isDirectory = exists && stats.isDirectory(); if (isDirectory) { if (!fs.existsSync(dest)) fs.mkdirSync(dest, {recursive: true}); fs.readdirSync(src).forEach(childItemName => { copyRecursiveSync(path.join(src, childItemName), path.join(dest, childItemName)); }); } else { fs.copyFileSync(src, dest); } } copyRecursiveSync('dist/shared', 'layers/shared/nodejs/node_modules/@shared');\"",
    "clean:layer": "node -e \"const fs=require('fs'); const path=require('path'); function removeRecursiveSync(dirPath) { if (fs.existsSync(dirPath)) { fs.rmSync(dirPath, {recursive: true, force: true}); } } removeRecursiveSync('layers/shared/nodejs/node_modules/@shared');\"",
    "deploy:prod": "npm run build:lambda && cd .. && sam build && sam deploy --config-env prod",
    "install:layer": "cd layers/shared/nodejs && npm install",
    "install:layer-lambda": "cd layers/shared/nodejs && npm install --os=linux --cpu=x64",
    "install-sharp-lambda": "npm uninstall sharp && npm install --os=linux --cpu=x64 sharp",
    "install-sharp-dev": "npm uninstall sharp && npm install sharp",
    "install-bcrypt-lambda": "cd layers/shared/nodejs && npm uninstall bcrypt && npm install --os=linux --cpu=x64 bcrypt",
    "install-bcrypt-dev": "cd layers/shared/nodejs && npm uninstall bcrypt && npm install bcrypt",
    "install-native-lambda": "npm run install-bcrypt-lambda",
    "install-native-dev": "npm run install-bcrypt-dev && npm run install-sharp-dev",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest __tests__/unit",
    "test:integration": "jest __tests__/integration",
    "test:ci": "jest --coverage --watchAll=false",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "clean": "rm -rf dist",
    "migrate:gsi4-albums": "npm run build && node dist/scripts/backfill-gsi4-albums.js",
    "migrate:gsi4-albums:dry-run": "npm run build && node dist/scripts/backfill-gsi4-albums.js --dry-run"
  },
  "dependencies": {
    "@pornspot-ai/shared-types": "1.0.0",
    "@aws-sdk/client-dynamodb": "^3.450.0",
    "@aws-sdk/client-s3": "^3.450.0",
    "@aws-sdk/client-ssm": "^3.450.0",
    "@aws-sdk/lib-dynamodb": "^3.450.0",
    "@aws-sdk/s3-request-presigner": "^3.450.0",
    "@sendgrid/mail": "^8.1.5",
    "@types/bcrypt": "^5.0.2",
    "aws-lambda": "^1.0.7",
    "bcrypt": "^6.0.0",
    "dotenv": "^17.2.0",
    "google-auth-library": "^9.6.3",
    "googleapis": "^134.0.0",
    "mime-types": "^2.1.35",
    "sharp": "^0.34.3",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.126",
    "@types/jest": "^29.5.8",
    "@types/mime-types": "^2.1.4",
    "@types/node": "^20.9.0",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "aws-sdk-client-mock": "^3.0.0",
    "aws-sdk-client-mock-jest": "^3.0.0",
    "dynamodb-local": "^0.0.31",
    "eslint": "^8.53.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "keywords": [
    "aws",
    "lambda",
    "serverless",
    "gallery",
    "typescript"
  ],
  "author": "pornspot.ai",
  "license": "MIT"
}
